= content_for :top_menu do
  %li= link_to t('.back'), :back

= form_for resource do |form|
  - if form.object.errors.any?
    = form.object.errors.full_messages

  .input-field
    = form.label :title
    = form.text_field :title
  .input-field
    = form.label :summary
    = form.text_area :summary, class: 'materialize-textarea'

  .row
    .col.s12.m6
      %h3= t('.actors')
      .input-field
        = form.collection_select(:actor_ids, Person.all, :id, :name, { selected: form.object.actors.map(&:person_id) }, { multiple: true })

    .col.s12.m6
      %h3= t('.director')
      .input-field
        = form.fields_for :director, form.object.director || form.object.build_director do |director_form|
          = director_form.collection_select(:person_id, Person.all, :id, :name, { selected: director_form.object.person_id })

  %h3= t('.pictures')

  .row
    = form.fields_for :pictures do |picture_form|
      .col.s12.m6.l3
        - if picture_form.object.file?
          = image_tag(picture_form.object.file.url, class: 'materialboxed responsive-img')
        .file-field.input-field
          .btn
            %span= t('.picture')
            = picture_form.file_field :file
            = picture_form.hidden_field :file_cache
          .file-path-wrapper
            %input.file-path.validate

    = form.fields_for :pictures, form.object.pictures.build(picturable: resource) do |picture_form|
      .col.s12.m6.l3
        .file-field.input-field
          .btn
            %span= t('.picture')
            = picture_form.file_field :file
            = picture_form.hidden_field :file_cache
          .file-path-wrapper
            %input.file-path.validate

  .center
    .divider
    = form.submit t('.submit'), class: 'waves-effect waves-light btn-large'
